{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","score","gainScoreAudio","AudioClip","testPrefab","onLoad","console","log","groundY","y","height","scorePool","NodePool","starPool","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","starDuration","Math","random","timer","spawnScoreFX","fx","init","despawnScoreFX","scoreFX","put","randX","randY","jumpHeight","maxX","width","v2","gainScore","pos","string","play","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene","update","dt"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n       // 这个属性引用了星星预制资源\n       starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 5,\n        minStarDuration: 3,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 初始化得分\n        score: 0,\n        gainScoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        testPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n    },\n\n\n    onLoad () {\n        console.log(this);\n        // 获取地平面的 y 轴坐标????\n        this.groundY = this.ground.y + this.ground.height / 2;\n        this.scorePool = new cc.NodePool('ScoreFX');\n        this.starPool = new cc.NodePool('Star');\n        // 初始化计分\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        //instantiate 方法的作用是：克隆指定的任意类型的对象，或者从 Prefab 实例化出新节点，返回值为 Node 或者 Object\n        let newStar = null;\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get();\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n        this.node.addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n        console.log(' newStar.getComponent(\\'Star\\')', newStar.getComponent('Star'));\n        this.starDuration = this.minStarDuration + Math.random()*(this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n\n    },\n    // 生成得分\n    spawnScoreFX: function(){\n        let fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.testPrefab).getComponent('ScoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n    // 销毁得分\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX);\n    },\n\n    getNewStarPosition: function () {\n        let randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        let randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        let maxX = this.node.width/2;\n        // 产生正负\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标  cc.v2二维向量坐标\n        return cc.v2(randX, randY);\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放特效\n        let fx = this.spawnScoreFX();\n        console.log('fx', fx);\n        this.node.addChild(fx.node);\n        fx.node.setPosition(pos);\n        fx.play();\n        cc.audioEngine.playEffect(this.gainScoreAudio, false);\n    },\n\n\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    },\n\n     update (dt) {\n         // 每帧更新计时器，超过限度还没有生成新的星星\n         // 就会调用游戏失败逻辑\n         if (this.timer > this.starDuration) {\n             // this.gameOver();\n             return;\n         }\n         this.timer += dt;\n     },\n});\n"]}